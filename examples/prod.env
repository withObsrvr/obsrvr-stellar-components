# Production Environment Configuration Template
# Copy this file to .env.prod and customize for your production environment
# IMPORTANT: Review all values before deploying to production

# Stellar Network Configuration
STELLAR_NETWORK=mainnet
STELLAR_RPC_URL=https://horizon.stellar.org
NETWORK_PASSPHRASE=Public Global Stellar Network ; September 2015

# Processing Configuration  
START_LEDGER=0
BATCH_SIZE=2000
PROCESSOR_THREADS=8
EVENT_TYPES=payment,path_payment_strict_receive,path_payment_strict_send,create_account

# Output Configuration
OUTPUT_FORMATS=parquet,websocket
DATA_DIR=/data/stellar
WEBSOCKET_PORT=8080
API_PORT=8081

# Performance Configuration (optimized for production)
BUFFER_SIZE=20000
FLUSH_INTERVAL=30s
WRITER_THREADS=6

# Monitoring Configuration
LOG_LEVEL=info
ENABLE_METRICS=true
METRICS_PORT=9090

# Production Features
ENABLE_DASHBOARDS=true
ENABLE_ALERTS=true
ALERT_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
REAL_TIME_ANALYTICS=true

# Storage Configuration (for data lake mode)
STORAGE_BACKEND=s3
BUCKET_NAME=your-stellar-ledger-archive
AWS_REGION=us-west-2
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key

# GCP Configuration (alternative to AWS)
# GCP_PROJECT=your-gcp-project
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# Data Retention
ENABLE_RETENTION=true
MAX_DATA_AGE=90d
MAX_DATA_SIZE=1TB

# Security Configuration
ENABLE_TLS=true
# TLS_CERT_FILE=/etc/ssl/certs/server.crt
# TLS_KEY_FILE=/etc/ssl/private/server.key

# Resource Limits (adjust based on your infrastructure)
STELLAR_SOURCE_CPU_LIMIT=1000m
STELLAR_SOURCE_MEMORY_LIMIT=2Gi
TTP_PROCESSOR_CPU_LIMIT=2000m
TTP_PROCESSOR_MEMORY_LIMIT=4Gi
ANALYTICS_SINK_CPU_LIMIT=1000m
ANALYTICS_SINK_MEMORY_LIMIT=2Gi

# Docker Configuration
EXECUTION_MODE=container
DOCKER_REGISTRY=ghcr.io/withobsrvr
DOCKER_TAG=v1.0.0

# High Availability Configuration
ENABLE_HA=false
REPLICA_COUNT=3
LOAD_BALANCER_ENABLED=false

# Backup Configuration
ENABLE_BACKUP=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION=30d
# BACKUP_S3_BUCKET=your-backup-bucket

# Monitoring Integrations
# PROMETHEUS_URL=https://prometheus.your-domain.com
# GRAFANA_URL=https://grafana.your-domain.com
# GRAFANA_API_KEY=your-grafana-api-key

# Optional: Machine Learning Features
ENABLE_ML=false
# ML_MODEL_PATH=/models/stellar-analytics